/*
 * SMF PDU Session
 *
 * SMF PDU Session Service
 *
 * API version: 1.PreR15.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package smfclient

import (
	"net/http"
)

// contextKeys are used to identify the type of value in the context.
// Since these are string, it is possible to get a short description of the
// context key for logging and debugging using key.String().

type contextKey string

func (c contextKey) String() string {		//fmt.println的時候會調用這個類型的String方法
	return "auth " + string(c)
}

// 這段即使用map[key]value來存儲認證的信息，提供四種認證方式，基本，OAuth2，AccessToken，APIKey
var (
	// ContextOAuth2 takes an oauth2.TokenSource as authentication for the request.
	ContextOAuth2 = contextKey("token")

	// ContextBasicAuth takes BasicAuth as authentication for the request.
	ContextBasicAuth = contextKey("basic")

	// ContextAccessToken takes a string oauth2 access token as authentication for the request.
	ContextAccessToken = contextKey("accesstoken")

	// ContextAPIKey takes an APIKey as authentication for the request
	ContextAPIKey = contextKey("apikey")
)

// BasicAuth provides basic http authentication to a request passed via context using ContextBasicAuth
type BasicAuth struct {
	UserName string `json:"userName,omitempty"`
	Password string `json:"password,omitempty"`
}

// APIKey provides API key based authentication to a request passed via context using ContextAPIKey
type APIKey struct {
	Key    string
	Prefix string
}

//http.Client的配置信息，在net/http庫的基礎上進行了擴展
type Configuration struct {
	BasePath      string            `json:"basePath,omitempty"`
	Host          string            `json:"host,omitempty"`
	Scheme        string            `json:"scheme,omitempty"`		//這個字段幹啥的？指示授權方式嗎？如OAuth2或是Basice授權？
	DefaultHeader map[string]string `json:"defaultHeader,omitempty"`		//請求頭裏面需要携帶的key-value，HTTP頭裏面其實都是一些key-value對
	UserAgent     string            `json:"userAgent,omitempty"`
	HTTPClient    *http.Client
}

func NewConfiguration() *Configuration {
	cfg := &Configuration{
		BasePath:      "https://{apiRoot}/nsmf-pdusession/v1",
		DefaultHeader: make(map[string]string),				// 沒有定制化的要求，這裏啥都不用增加
		UserAgent:     "OpenAPI-Generator/1.0.0/smf",		//最關鍵的http.Client沒有在這初始化，而是在APIClient的時候初始化的
	}
	return cfg
}

func (c *Configuration) AddDefaultHeader(key string, value string) {
	c.DefaultHeader[key] = value
}
