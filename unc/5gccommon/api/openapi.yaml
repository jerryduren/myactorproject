openapi: 3.0.0
info:
  description: Common Data Types
  title: Common Data Types
  version: 1.R15.0.0
servers:
- url: /
paths: {}
components:
  responses:
    400:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Bad request
    401:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unauthorized
    403:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Forbidden
    404:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Not Found
    405:
      description: Method Not Allowed
    408:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Request Timeout
    409:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Conflict
    410:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Gone
    411:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Length Required
    413:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Payload Too Large
    414:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: URI Too Long
    415:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unsupported Media Type
    500:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Internal Server Error
    501:
      description: Not Implemented
    503:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Service Unavailable
    504:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Gateway Timeout
    default:
      description: Generic Error
  schemas:
    Binary:
      format: binary
      type: string
    Bytes:
      format: byte
      type: string
    Date:
      format: date
      type: string
    DateTime:
      format: date-time
      type: string
    DiameterIdentity:
      pattern: ^([A-Za-z0-9]+(-[A-Za-z0-9]+).)+[a-z]{2,}$
      type: string
    Double:
      format: double
      type: number
    DurationSec:
      format: int32
      type: integer
    Float:
      format: float
      type: number
    Int32:
      format: int32
      type: integer
    Int64:
      format: int64
      type: integer
    Ipv4Addr:
      type: string
    Ipv6Addr:
      type: string
    Ipv6Prefix:
      type: string
    MacAddr48:
      pattern: ^([0-9a-fA-F]{2})((-[0-9a-fA-F]{2}){5})$
      type: string
    SupportedFeatures:
      pattern: ^[A-Fa-f0-9]*$
      type: string
    Uinteger:
      format: int32
      minimum: 0
      type: integer
    Uint16:
      format: int32
      maximum: 65535
      minimum: 0
      type: integer
    Uint32:
      format: int32
      minimum: 0
      type: integer
    Uint64:
      format: int64
      minimum: 0
      type: integer
    Uri:
      type: string
    TimeZone:
      format: TimeZone
      type: string
    PatchOperation:
      anyOf:
      - enum:
        - add
        - copy
        - move
        - remove
        - replace
        - test
        type: string
      - type: string
    ProblemDetails:
      properties:
        type:
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
        instance:
          type: string
        cause:
          type: string
        invalidParams:
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 0
          type: array
      type: object
    Link:
      properties:
        href:
          type: string
      type: object
    PatchItem:
      properties:
        op:
          $ref: '#/components/schemas/PatchOperation'
        path:
          type: string
        from:
          type: string
        value:
          nullable: true
      required:
      - op
      - path
      type: object
    LinksValueSchema:
      oneOf:
      - items:
          $ref: '#/components/schemas/Link'
        minItems: 1
        type: array
      - $ref: '#/components/schemas/Link'
    SelfLink:
      properties:
        self:
          $ref: '#/components/schemas/Link'
      required:
      - self
      type: object
    InvalidParam:
      properties:
        param:
          type: string
        reason:
          type: string
      required:
      - param
      type: object
    Dnn:
      type: string
    Gpsi:
      pattern: ^(msisdn-[0-9]{5,15}|extid-.+|.+)$
      type: string
    GroupId:
      pattern: ^(groupid-[A-Fa-f0-9]{14,34}|.+)$
      type: string
    Pei:
      pattern: ^(imei-[0-9]{15}|imeisv-[0-9]{16}|.+)$
      type: string
    Supi:
      format: Supi
      pattern: ^(imsi-[0-9]{5,15}|nai-.+|.+)$
      type: string
    NfInstanceId:
      format: uuid
      type: string
    AmfId:
      pattern: ^[A-Fa-f0-9]{6}$
      type: string
    RfspIndex:
      format: int32
      maximum: 256
      minimum: 1
      type: integer
    Guami:
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        amfId:
          pattern: ^[A-Fa-f0-9]{6}$
          type: string
      required:
      - amfId
      - plmnId
      type: object
    NetworkId:
      minProperties: 1
      properties:
        mnc:
          pattern: ^\d{2,3}$
          type: string
        mcc:
          pattern: ^\d{3}$
          type: string
      type: object
    ApplicationId:
      type: string
    PduSessionId:
      format: int32
      maximum: 255
      minimum: 0
      type: integer
    Mcc:
      pattern: ^\d{3}$
      type: string
    Mnc:
      pattern: ^\d{2,3}$
      type: string
    Tac:
      pattern: (^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)
      type: string
    EutraCellId:
      pattern: ^[A-Fa-f0-9]{7}$
      type: string
    NrCellId:
      pattern: ^[A-Fa-f0-9]{9}$
      type: string
    AccessType:
      enum:
      - 3GPP_ACCESS
      - NON_3GPP_ACCESS
      type: string
    RatType:
      anyOf:
      - enum:
        - NR
        - EUTRA
        - WLAN
        - VIRTUAL
        type: string
      - type: string
    PduSessionType:
      anyOf:
      - enum:
        - IPV4V6
        - IPV4
        - IPV6
        - UNSTR
        - ETHER
        type: string
      - type: string
    UpIntegrity:
      anyOf:
      - enum:
        - REQUIRED
        - PREFERRED
        - NOT_NEEDED
        type: string
      - type: string
    UpConfidentiality:
      anyOf:
      - enum:
        - REQUIRED
        - PREFERRED
        - NOT_NEEDED
        type: string
      - type: string
    SscMode:
      anyOf:
      - enum:
        - SSC_MODE_1
        - SSC_MODE_2
        - SSC_MODE_3
        type: string
      - type: string
    DefaultQosInformation:
      type: string
    Snssai:
      properties:
        sst:
          format: int32
          minimum: 0
          type: integer
        sd:
          type: string
      required:
      - sst
      type: object
    PlmnId:
      properties:
        mcc:
          pattern: ^\d{3}$
          type: string
        mnc:
          pattern: ^\d{2,3}$
          type: string
      required:
      - mcc
      - mnc
      type: object
    Tai:
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        tac:
          pattern: (^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)
          type: string
      required:
      - plmnId
      - tac
      type: object
    Ecgi:
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        eutraCellId:
          pattern: ^[A-Fa-f0-9]{7}$
          type: string
      required:
      - eutraCellId
      - plmnId
      type: object
    Ncgi:
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        nrCellId:
          pattern: ^[A-Fa-f0-9]{9}$
          type: string
      required:
      - nrCellId
      - plmnId
      type: object
    UserLocation:
      properties:
        eutraLocation:
          $ref: '#/components/schemas/EutraLocation'
        nrLocation:
          $ref: '#/components/schemas/NrLocation'
        n3gaLocation:
          $ref: '#/components/schemas/N3gaLocation'
      type: object
    EutraLocation:
      properties:
        tai:
          $ref: '#/components/schemas/Tai'
        ecgi:
          $ref: '#/components/schemas/Ecgi'
      required:
      - ecgi
      - tai
      type: object
    NrLocation:
      properties:
        tai:
          $ref: '#/components/schemas/Tai'
        ncgi:
          $ref: '#/components/schemas/Ncgi'
      required:
      - ncgi
      - tai
      type: object
    N3gaLocation:
      properties:
        n3gppTai:
          $ref: '#/components/schemas/Tai'
        n3IwfId:
          pattern: ^[A-Fa-f0-9]+$
          type: string
        ueIpv4Addr:
          type: string
        ueIpv6Addr:
          type: string
        portNumber:
          format: int32
          minimum: 0
          type: integer
      required:
      - n3IwfId
      - n3gppTai
      type: object
    UpSecurity:
      properties:
        upIntegr:
          $ref: '#/components/schemas/UpIntegrity'
        upConfid:
          $ref: '#/components/schemas/UpConfidentiality'
      required:
      - upConfid
      - upIntegr
      type: object
    RefToBinaryData:
      properties:
        contentId:
          type: string
      required:
      - contentId
      type: object
    Qfi:
      format: int32
      maximum: 63
      minimum: 0
      type: integer
    5qi:
      format: int32
      maximum: 255
      minimum: 0
      type: integer
    BitRate:
      pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
      type: string
    ArpPriorityLevel:
      format: int32
      maximum: 15
      minimum: 1
      type: integer
    5qiPriorityLevel:
      format: int32
      maximum: 127
      minimum: 1
      type: integer
    PacketDelBudget:
      format: int32
      minimum: 1
      type: integer
    PacketErrRate:
      format: int32
      type: integer
    PacketLossRate:
      format: int32
      maximum: 1000
      minimum: 0
      type: integer
    AverWindow:
      type: string
    MaxDataBurstVol:
      format: int32
      minimum: 1
      type: integer
    PreemptionCapability:
      anyOf:
      - enum:
        - NOT_PREEMPT
        - MAY_PREEMPT
        type: string
      - type: string
    DelayCritical:
      anyOf:
      - enum:
        - CRITICAL
        - NON_CRITICAL
        type: string
      - type: string
    PreemptionVulnerability:
      anyOf:
      - enum:
        - NOT_PREEMPTABLE
        - PREEMPTABLE
        type: string
      - type: string
    ReflectiveQosAttribute:
      anyOf:
      - enum:
        - RQOS
        - NO_RQOS
        type: string
      - type: string
    NotificationControl:
      anyOf:
      - enum:
        - REQUESTED
        - NOT_REQUESTED
        type: string
      - type: string
    Arp:
      properties:
        priorityLevel:
          format: int32
          maximum: 15
          minimum: 1
          type: integer
        preemptCap:
          $ref: '#/components/schemas/PreemptionCapability'
        preemptVuln:
          $ref: '#/components/schemas/PreemptionVulnerability'
      required:
      - preemptCap
      - preemptVuln
      - priorityLevel
      type: object
    Ambr:
      properties:
        uplink:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        downlink:
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
      required:
      - downlink
      - uplink
      type: object
